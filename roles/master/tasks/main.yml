- name: Install Postfix (Debian)
  when: ansible_distribution == 'Debian'
  apt: name=postfix state=latest force=yes
  notify: restart postfix

- name: Enable Postfix (FreeBSD)
  when: ansible_distribution == 'FreeBSD'
  lineinfile: dest=/etc/rc.conf regexp=^postfix_enable= line=postfix_enable=YES
- name: Enable SMTPS (FreeBSD)
  when: ansible_distribution == 'FreeBSD' and ansible_hostname in groups.master
  lineinfile: dest=/usr/local/etc/postfix/master.cf regexp=^smtps line="smtps     inet  n       -       n       -       -       smtpd -o smtpd_tls_wrappermode=yes"
- name: "Disable Sendmail (FreeBSD)"
  when: ansible_distribution == 'FreeBSD'
  lineinfile: dest=/etc/rc.conf regexp=^sendmail_enable= line=sendmail_enable=NO
  lineinfile: dest=/etc/rc.conf regexp=^sendmail_submit_enable= line=sendmail_submit_enable=NO
  lineinfile: dest=/etc/rc.conf regexp=^sendmail_outbound_enable= line=sendmail_outbound_enable=NO
  lineinfile: dest=/etc/rc.conf regexp=^sendmail_msp_queue_enable= line=sendmail_msp_queue_enable=NO

- name: Install Policyd (FreeBSD)
  when: ansible_distribution == 'FreeBSD' and ansible_hostname in groups.master
  pkgng: name=py27-postfix-policyd-spf-python state=present
- name: Enable Policyd (FreeBSD)
  when: ansible_distribution == 'FreeBSD' and ansible_hostname in groups.master
  lineinfile: dest=/usr/local/etc/postfix/master.cf regexp=^policyd-spf line="policyd-spf unix  -       n       n       -       0       spawn user=nobody argv=/usr/local/bin/policyd-spf"

- name: Install OpenDKIM (FreeBSD)
  when: ansible_distribution == 'FreeBSD' and ansible_hostname in groups.master
  pkgng: name=opendkim state=present
  notify: restart opendkim
  notify: restart postfix
- name: Enable OpenDKIM (FreeBSD)
  when: ansible_distribution == 'FreeBSD' and ansible_hostname in groups.master
  lineinfile: dest=/etc/rc.conf regexp=^milteropendkim_enable= line=milteropendkim_enable=YES
- name: Set OpenDKIM UUID (FreeBSD)
  when: ansible_distribution == 'FreeBSD' and ansible_hostname in groups.master
  lineinfile: dest=/etc/rc.conf regexp=^milteropendkim_uid= line=milteropendkim_uid=opendkim

- name: Create opendkim user
  user: >
    name=opendkim
    createhome=no
    comment=OpenDKIM
    shell=/usr/sbin/nologin
    home=/usr/local/etc/mail/
- name: Creates opendkim db
  file: >
    path=/var/db/opendkim
    state=directory
    owner=opendkim
    group=opendkim
    mode=0770
- name: Paste opendkim config
  notify: restart opendkim
  template: >
    src=opendkim.conf
    dest=/usr/local/etc/mail/opendkim.conf
    owner=opendkim
    group=opendkim
    mode=0770

- name: Enable Dovecot (FreeBSD)
  when: ansible_distribution == 'FreeBSD' and ansible_hostname in groups.master
  lineinfile: dest=/etc/rc.conf regexp=^dovecot_enable= line=dovecot_enable=YES
- name: Paste dovecot config
  notify: restart dovecot
  template: >
    src=dovecot.conf
    dest=/usr/local/etc/dovecot/dovecot.conf
    owner=root
    group=wheel
    mode=0644
- name: Paste dovecot pam
  notify: restart dovecot
  template: >
    src=dovecot.pam
    dest=/usr/local/etc/pam.d/dovecot
    owner=root
    group=wheel
    mode=0644

- name: Paste main config
  notify: restart postfix
  template: src=main.cf dest=/usr/local/etc/postfix/main.cf mode=0644

- name: Paste mynetworks config
  notify: restart postfix
  register: mynetworks
  template: >
    src=mynetworks
    dest=/usr/local/etc/postfix/mynetworks
    owner=root
    group=wheel
    mode=0644
- name: Remove old mynetworks db
  when: mynetworks.changed
  shell: rm /usr/local/etc/postfix/mynetworks.db
- name: Map mynetworks config
  when: mynetworks.changed
  shell: postmap /usr/local/etc/postfix/mynetworks

- name: Paste access config
  notify: restart postfix
  register: access
  template: >
    src=access
    dest=/usr/local/etc/postfix/access
    owner=root
    group=wheel
    mode=0644
- name: Remove old access db
  when: access.changed
  shell: rm /usr/local/etc/postfix/access.db
- name: Map access config
  when: access.changed
  shell: postmap /usr/local/etc/postfix/access

- name: Paste canonical config
  notify: restart postfix
  register: canonical
  template: >
    src=canonical
    dest=/usr/local/etc/postfix/canonical
    owner=root
    group=wheel
    mode=0644
- name: Remove old canonical db
  when: canonical.changed
  shell: rm /usr/local/etc/postfix/canonical.db
- name: Map canonical config
  when: canonical.changed
  shell: postmap /usr/local/etc/postfix/canonical

- name: Paste generic config
  notify: restart postfix
  register: generic
  template: >
    src=generic
    dest=/usr/local/etc/postfix/generic
    owner=root
    group=wheel
    mode=0644
- name: Remove old generic db
  when: generic.changed
  shell: rm /usr/local/etc/postfix/generic.db
- name: Map generic config
  when: generic.changed
  shell: postmap /usr/local/etc/postfix/generic

- name: Paste virtual config
  notify: restart postfix
  register: virtual
  template: >
    src=virtual
    dest=/usr/local/etc/postfix/virtual
    owner=root
    group=wheel
    mode=0644
- name: Remove old virtual db
  when: virtual.changed
  shell: rm /usr/local/etc/postfix/virtual.db
- name: Map virtual config
  when: virtual.changed
  shell: postmap /usr/local/etc/postfix/virtual

- name: Paste vmailbox config
  notify: restart postfix
  register: vmailbox
  template: >
    src=vmailbox
    dest=/usr/local/etc/postfix/vmailbox
    owner=root
    group=wheel
    mode=0644
- name: Remove old vmailbox db
  when: vmailbox.changed
  shell: rm /usr/local/etc/postfix/vmailbox.db
- name: Map access config
  when: vmailbox.changed
  shell: postmap /usr/local/etc/postfix/vmailbox

- name: Paste aliases config
  notify: restart postfix
  register: aliases
  template: >
    src=aliases
    dest=/etc/aliases
    owner=root
    group=wheel
    mode=0644
- name: Map aliases config
  when: aliases.changed
  shell: newaliases
